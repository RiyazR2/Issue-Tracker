generator client {
  provider = "prisma-client-js"
}

datasource db {
<<<<<<< HEAD
  // provider = "mysql"
=======
>>>>>>> 9177e3503bacc44f116f14389fed180f3a97b481
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Issue {
  id               Int      @id @default(autoincrement())
<<<<<<< HEAD
  title            String
  description      String   
  status           Status   @default(OPEN)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  assignedToUserId String?
=======
  title            String   @db.VarChar(255) // Optional, remove if not enforcing length limit
  description      String   @db.Text
  status           Status   @default(OPEN)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  assignedToUserId String?  @db.VarChar(255) // Optional, remove if not enforcing length limit
>>>>>>> 9177e3503bacc44f116f14389fed180f3a97b481
  assignedToUser   User?    @relation(fields: [assignedToUserId], references: [id])
}

enum Status {
  OPEN
  IN_PROGRESS
  CLOSED
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
<<<<<<< HEAD
  providerAccountId String  @map("provider_account_id")
  refresh_token     String? 
  access_token      String? 
=======
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
>>>>>>> 9177e3503bacc44f116f14389fed180f3a97b481
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? 
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  accounts       Account[]
  sessions       Session[]
  assignedIssues Issue[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
